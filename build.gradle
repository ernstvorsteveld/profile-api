buildscript {
    dependencies {
        // Updated version can be passed via command line arg as -PopenApiGeneratorVersion=VERSION
        classpath "org.openapitools:openapi-generator-gradle-plugin:4.1.3"
    }
}

plugins {
    id "org.openapi.generator" version "4.1.3"
    id 'org.springframework.boot' version '2.2.0.RC1'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'java'
}
//apply from: "gradle/openapi.gradle"

group = 'com.vorstdev.api'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
//    implementation 'io.swagger.core.v3:swagger-annotations:2.0.10'
    implementation 'org.openapitools:jackson-databind-nullable:0.2.0'
    implementation 'io.swagger:swagger-annotations:1.5.24'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'org.springframework.security:spring-security-test'
}

test {
    useJUnitPlatform()
}

task buildProfileApi(type: org.openapitools.generator.gradle.plugin.tasks.GenerateTask){
    generatorName = "spring"
    inputSpec = "$rootDir/src/main/resources/api-specification.yml".toString()
    outputDir = "$buildDir/generated".toString()
    apiPackage = "org.openapi.example.api"
    invokerPackage = "org.openapi.example.invoker"
    modelPackage = "org.openapi.example.model"
    configOptions = [
            dateLibrary: "java8",
            useBeanValidation: "true",
            generateApiDocumentation: "false",
            generateModelDocumentation: "false"
    ]
    systemProperties = [
            modelDocs: "false",
            apiDocs: "false",

    ]
}

//compileJava.dependsOn tasks.buildProfileApi

sourceSets.main.java.srcDirs(
        "$buildDir/generated/src/main/java"
)
sourceSets.main.resources.srcDirs(
        "$buildDir/generated/src/main/resources"
)
